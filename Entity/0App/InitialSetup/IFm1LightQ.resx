<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgLst.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgLst.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACy
        CQAAAk1TRnQBSQFMAwEBAAF4AQEBeAEBARQBAAEUAQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoAwABUAMA
        ARQDAAEBAQABGAUAAcABEhIAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEA
        AewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEA
        AewBqQEAAewBqQEAAewBqbUAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEA
        AewBqQEAAewBqQEAAe0BrAEKAfQBzAFqAe0BrAEKAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEA
        AewBqQEAAewBqQEAAewBqbUAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEA
        AewBqQEAAewBqQEAAfABvAE5A/8B8QG9ATwB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGp
        AQAB7AGpAQAB7AGptQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGp
        AQAB7AGpAQAB8QHEAVAD/wHzAckBYAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHs
        AakBAAHsAam1AAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHs
        AakBAAHzAcsBZwP/AfYB2QGNAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEA
        AewBqbUAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEA
        AfYB1wGIAf0B+AHsAfoB6gHAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEA
        AewBqbUAAewBqQEAAewBqQEAAewBqgECAe0BsAEUAe4BsAEWAe4BsAEWAe0BrwETAewBqQEAAewBqQEA
        AfgB4gGqAfUB1AGAAf0B+ALsAaoBBAHsAaoBBAHtAa4BEQHtAa8BEQHtAa8BEgHsAasBBgHsAakBAAHs
        Aam1AAHsAakBAAHsAakBAAHvAbUBJAH8AfIB2AH9AfUB4gH9AfUB4gH9AfQB3gHuAbEBGQHsAakBAAH7
        Ae4BzAHwAb0BPAH8AfMB3QHvAboBNAH1AdIBfQH8AfMB3QH8AfQB3QH8AfQB3gH1AdUBggHsAakBAAHs
        Aam1AAHsAakBAAHsAakBAAHtAasBBwHwAb8BPwHxAcEBRwHxAcEBRwH8AfEB1wHyAcUBVQHsAakBAAH9
        AfgB6wHtAa0BCwH6AegBuwH1AdQBgQH7Ae8B0QH3Ad4BngHyAcUBUwHxAcQBUQHuAbMBHgHsAakBAAHs
        Aam1AAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAH5AeQBrgH2AdkBjwHuAbABFgH9
        AfgB6gHsAakBAAH3AdsBlwH8AfMB3AH9AfgB7AHwAboBNQHsAakBAAHsAakBAAHsAakBAAHsAakBAAHs
        Aam1AAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAH2AdgBjAH6AesBxAHxAcABRQH7
        AfAB1AHsAakBAAH0AcsBZgL/Af4B/AH0AeAB7AGrAQQB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGp
        tQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB8wHKAWEB/AHzAdsB9QHUAX8B+gHo
        Ab0B7AGpAQAB8AG6ATMD/wH2AdcBiAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAam1AAHs
        AakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHvAbsBNQH9AfcB6QH5AegBuwH4AeEBpwHs
        AakBAAHsAasBBgH9AfkB7gHwAbsBNwHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAam1AAHs
        AakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHtAa0BDAH+AfsB9AH9AfoB8QH2AdgBiwHs
        AakBAAHsAakBAAHtAbABEwHsAaoBBAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAam1AAHs
        AakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAH7Ae8B0QP/AfQBzAFpAewBqQEA
        AewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqbUAAewBqQEA
        AewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAewBqQEAAfcB2wGWA/8B8QHBAUcB7AGpAQAB7AGp
        AQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGptQAB7AGpAQAB7AGp
        AQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB7AGpAQAB8gHIAVsD/wHvAbYBJgHsAakBAAHsAakBAAHs
        AakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAam1AAHsAakBAAHsAakBAAHs
        AakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHvAbkBLwH+AfkB8QHsAasBBgHsAakBAAHsAakBAAHs
        AakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAam1AAHsAakBAAHsAakBAAHs
        AakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAaoBBAHuAbEBFwHsAakBAAHsAakBAAHsAakBAAHs
        AakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAam1AAHsAakBAAHsAakBAAHs
        AakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHs
        AakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAakBAAHsAam1AAFCAU0BPgcAAT4DAAEo
        AwABUAMAARQDAAEBAQABAQUAAfAXAAP/8QAL
</value>
  </data>
</root>